<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>javalego</groupId>
	<artifactId>javalego-app-store</artifactId>
	<packaging>war</packaging>
	<version>1</version>
	<name>JAVALEGO Store Web Application</name>

	<properties>
		<servlet-api.version>3.0.1</servlet-api.version>
		<deploy.skip>false</deploy.skip>
		<vaadin.version>7.3.7</vaadin.version>
	</properties>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>internal</id>
			<name>Archiva Managed Internal Repository</name>
			<url>http://localhost:8080/repository/internal/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>

		<!-- <dependency> <groupId>org.vaadin.addons</groupId> <artifactId>fontawesomelabel</artifactId> 
			<version>1.1.6</version> </dependency> -->

		<!-- <dependency> <groupId>org.vaadin.alump.columnlayout</groupId> <artifactId>columnlayout-addon</artifactId> 
			<version>0.1.2</version> </dependency> -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet-api.version}</version>
		</dependency>

		<dependency>
			<groupId>javalego</groupId>
			<artifactId>javalego_app</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>javalego</groupId>
			<artifactId>javalego_ui_vaadin</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>javalego</groupId>
			<artifactId>javalego_security_shiro</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>javalego</groupId>
			<artifactId>javalego_data_spring</artifactId>
			<version>2.0</version>
		</dependency>

		<!-- Soluciona un problema de error de validación hibernate. Error: Caused 
			by: javax.validation.ValidationException: Unable to find a default provider -->
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-validator</artifactId> 
			<version>5.0.2.Final</version> </dependency> -->

		<!-- VAADIN -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<!-- Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory). 
			For widgetset compilation, vaadin-client-compiler is automatically added 
			on the compilation classpath by vaadin-maven-plugin so normally there is 
			no need for an explicit dependency. -->
		<!-- <dependency> <groupId>com.vaadin</groupId> <artifactId>vaadin-client-compiler</artifactId> 
			<version>${vaadin.version}</version> <scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<version>${vaadin.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- <dependency> <groupId>com.vaadin</groupId> <artifactId>vaadin-push</artifactId> 
			<version>${vaadin.version}</version> </dependency> -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<version>${vaadin.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codemirror</groupId>
			<artifactId>codemirror</artifactId>
			<version>1.0</version>
			<scope>system</scope>
			<systemPath>${basedir}\src\main\webapp\WEB-INF\lib\codmirror-addon-0.9.0.jar</systemPath>
		</dependency>

	</dependencies>

	<build>

		<filters>
			<!-- Ensures that the config.properties file is always loaded from the 
				configuration directory of the active Maven profile. -->
			<filter>profiles/${build.profile.id}/config.properties</filter>
		</filters>

		<resources>
			<!-- Placeholders that are found from the files located in the configured 
				resource directories are replaced with the property values found from the 
				profile specific configuration file. -->
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- NO FUNCIONA NI SHIRO SERVLET NI EJECUCIÓN VAADIN -->
			<!-- <plugin> <groupId>org.apache.tomcat.maven</groupId> <artifactId>tomcat7-maven-plugin</artifactId> 
				<configuration> <url>http://localhost:8080/javalego-store/home</url> </configuration> 
				<version>7</version> </plugin> -->

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
			</plugin>

		</plugins>

		<finalName>javalego-store</finalName>

		<!-- <resources> <resource> <directory>src/main/java</directory> <includes> 
			<include>**/*.java</include> </includes> </resource> </resources> -->

	</build>

	<profiles>
		<profile>
			<id>TEST</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the production profile is prod, we must set the value of the build.profile.id 
					property to prod. -->
				<build.profile.id>test</build.profile.id>
			</properties>
		</profile>
		<profile>
			<id>DEV</id>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the production profile is prod, we must set the value of the build.profile.id 
					property to prod. -->
				<build.profile.id>dev</build.profile.id>
			</properties>
		</profile>
	</profiles>



</project>
